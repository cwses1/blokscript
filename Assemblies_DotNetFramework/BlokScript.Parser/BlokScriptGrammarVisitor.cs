//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BlokScriptGrammar.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BlokScript.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BlokScriptGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IBlokScriptGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScript([NotNull] BlokScriptGrammarParser.ScriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] BlokScriptGrammarParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] BlokScriptGrammarParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginStatement([NotNull] BlokScriptGrammarParser.LoginStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginOnlyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginOnlyStatement([NotNull] BlokScriptGrammarParser.LoginOnlyStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginWithGlobalUserNameStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginWithGlobalUserNameStatement([NotNull] BlokScriptGrammarParser.LoginWithGlobalUserNameStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginWithGlobalPasswordStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginWithGlobalPasswordStatement([NotNull] BlokScriptGrammarParser.LoginWithGlobalPasswordStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginWithGlobalTokenStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginWithGlobalTokenStatement([NotNull] BlokScriptGrammarParser.LoginWithGlobalTokenStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.loginWithGlobalUserNameAndPasswordStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoginWithGlobalUserNameAndPasswordStatement([NotNull] BlokScriptGrammarParser.LoginWithGlobalUserNameAndPasswordStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.varStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarStatement([NotNull] BlokScriptGrammarParser.VarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.spaceVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpaceVarStatement([NotNull] BlokScriptGrammarParser.SpaceVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockVarStatement([NotNull] BlokScriptGrammarParser.BlockVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.stringVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringVarStatement([NotNull] BlokScriptGrammarParser.StringVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.regexVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexVarStatement([NotNull] BlokScriptGrammarParser.RegexVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storyVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoryVarStatement([NotNull] BlokScriptGrammarParser.StoryVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.spaceSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpaceSpec([NotNull] BlokScriptGrammarParser.SpaceSpecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockSpec([NotNull] BlokScriptGrammarParser.BlockSpecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storySpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStorySpec([NotNull] BlokScriptGrammarParser.StorySpecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentStatement([NotNull] BlokScriptGrammarParser.AssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.spaceAssignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpaceAssignmentStatement([NotNull] BlokScriptGrammarParser.SpaceAssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockAssignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockAssignmentStatement([NotNull] BlokScriptGrammarParser.BlockAssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.stringAssignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringAssignmentStatement([NotNull] BlokScriptGrammarParser.StringAssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyStatement([NotNull] BlokScriptGrammarParser.CopyStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyBlockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyBlockStatement([NotNull] BlokScriptGrammarParser.CopyBlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copySpaceStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopySpaceStatement([NotNull] BlokScriptGrammarParser.CopySpaceStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copySpacesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopySpacesStatement([NotNull] BlokScriptGrammarParser.CopySpacesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] BlokScriptGrammarParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printSpacesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintSpacesStatement([NotNull] BlokScriptGrammarParser.PrintSpacesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printVarStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintVarStatement([NotNull] BlokScriptGrammarParser.PrintVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printSpaceStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintSpaceStatement([NotNull] BlokScriptGrammarParser.PrintSpaceStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printStringLiteralStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStringLiteralStatement([NotNull] BlokScriptGrammarParser.PrintStringLiteralStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printSymbolTableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintSymbolTableStatement([NotNull] BlokScriptGrammarParser.PrintSymbolTableStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.printLocalCacheStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintLocalCacheStatement([NotNull] BlokScriptGrammarParser.PrintLocalCacheStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.realDataLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealDataLocation([NotNull] BlokScriptGrammarParser.RealDataLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.spacesOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpacesOutputLocation([NotNull] BlokScriptGrammarParser.SpacesOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.fileSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFileSpec([NotNull] BlokScriptGrammarParser.FileSpecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockOutputLocation([NotNull] BlokScriptGrammarParser.BlockOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blocksOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlocksOutputLocation([NotNull] BlokScriptGrammarParser.BlocksOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storyOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoryOutputLocation([NotNull] BlokScriptGrammarParser.StoryOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.filesSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFilesSpec([NotNull] BlokScriptGrammarParser.FilesSpecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.spaceOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpaceOutputLocation([NotNull] BlokScriptGrammarParser.SpaceOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.varGetFrom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarGetFrom([NotNull] BlokScriptGrammarParser.VarGetFromContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyBlocksStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyBlocksStatement([NotNull] BlokScriptGrammarParser.CopyBlocksStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyStoryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyStoryStatement([NotNull] BlokScriptGrammarParser.CopyStoryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockConstraintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockConstraintList([NotNull] BlokScriptGrammarParser.BlockConstraintListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.blockConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockConstraint([NotNull] BlokScriptGrammarParser.BlockConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.intExprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntExprList([NotNull] BlokScriptGrammarParser.IntExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.intExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntExpr([NotNull] BlokScriptGrammarParser.IntExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.verbosityStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVerbosityStatement([NotNull] BlokScriptGrammarParser.VerbosityStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.waitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWaitStatement([NotNull] BlokScriptGrammarParser.WaitStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.compareStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareStatement([NotNull] BlokScriptGrammarParser.CompareStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.compareSpacesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareSpacesStatement([NotNull] BlokScriptGrammarParser.CompareSpacesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.compareBlocksStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareBlocksStatement([NotNull] BlokScriptGrammarParser.CompareBlocksStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.compareAllBlocksStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareAllBlocksStatement([NotNull] BlokScriptGrammarParser.CompareAllBlocksStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.publishStoryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPublishStoryStatement([NotNull] BlokScriptGrammarParser.PublishStoryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.unpublishStoryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpublishStoryStatement([NotNull] BlokScriptGrammarParser.UnpublishStoryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.deleteStoryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteStoryStatement([NotNull] BlokScriptGrammarParser.DeleteStoryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storiesInputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoriesInputLocation([NotNull] BlokScriptGrammarParser.StoriesInputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storiesOutputLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoriesOutputLocation([NotNull] BlokScriptGrammarParser.StoriesOutputLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyStoriesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyStoriesStatement([NotNull] BlokScriptGrammarParser.CopyStoriesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.publishStoriesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPublishStoriesStatement([NotNull] BlokScriptGrammarParser.PublishStoriesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.unpublishStoriesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpublishStoriesStatement([NotNull] BlokScriptGrammarParser.UnpublishStoriesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.deleteStoriesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteStoriesStatement([NotNull] BlokScriptGrammarParser.DeleteStoriesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storyConstraintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoryConstraintList([NotNull] BlokScriptGrammarParser.StoryConstraintListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.storyConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStoryConstraint([NotNull] BlokScriptGrammarParser.StoryConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.regexExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexExpr([NotNull] BlokScriptGrammarParser.RegexExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.regexExprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexExprList([NotNull] BlokScriptGrammarParser.RegexExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyDatasourceStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyDatasourceStatement([NotNull] BlokScriptGrammarParser.CopyDatasourceStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.copyDatasourcesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyDatasourcesStatement([NotNull] BlokScriptGrammarParser.CopyDatasourcesStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.datasourceConstraintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDatasourceConstraintList([NotNull] BlokScriptGrammarParser.DatasourceConstraintListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.datasourceConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDatasourceConstraint([NotNull] BlokScriptGrammarParser.DatasourceConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.stringExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpr([NotNull] BlokScriptGrammarParser.StringExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.stringExprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExprList([NotNull] BlokScriptGrammarParser.StringExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BlokScriptGrammarParser.forEachStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForEachStatement([NotNull] BlokScriptGrammarParser.ForEachStatementContext context);
}
} // namespace BlokScript.Parser
